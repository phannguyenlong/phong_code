{
	"info": {
		"_postman_id": "e2f5b731-4a3c-43e1-bc1c-f8d5c72a4c8d",
		"name": "Recipe Finder API",
		"description": "A complete collection for testing the Recipe Finder backend API endpoints with pre-filled test data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"postmanuser\",\n    \"email\": \"postmanuser@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user to the system"
					},
					"response": []
				},
				{
					"name": "Login User (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.token) {",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"    pm.environment.set(\"userId\", jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with the admin user. This request automatically sets the authToken environment variable for subsequent authenticated requests."
					},
					"response": []
				},
				{
					"name": "Login User (regular)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.token) {",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"    pm.environment.set(\"userId\", jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"postmanuser@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with a regular user. This request automatically sets the authToken environment variable for subsequent authenticated requests."
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/forgot-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"forgot-password"
							]
						},
						"description": "Request a password reset for a user"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and password reset"
		},
		{
			"name": "User Profile",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "Get the current user's profile information"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"location\": \"San Francisco, CA\",\n    \"preferences\": {\n        \"darkMode\": true,\n        \"emailNotifications\": false\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "Update the current user's profile information"
					},
					"response": []
				},
				{
					"name": "Get User's Recipes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"recipes"
							]
						},
						"description": "Get all recipes created by the current user"
					},
					"response": []
				},
				{
					"name": "Get User's Favorites",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"favorites"
							]
						},
						"description": "Get all recipes favorited by the current user"
					},
					"response": []
				},
				{
					"name": "Add Recipe to Favorites",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipeId\": \"{{recipeId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"favorites"
							]
						},
						"description": "Add a recipe to the current user's favorites"
					},
					"response": []
				},
				{
					"name": "Remove Recipe from Favorites",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/favorites/{{recipeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"favorites",
								"{{recipeId}}"
							]
						},
						"description": "Remove a recipe from the current user's favorites"
					},
					"response": []
				},
				{
					"name": "Get User's Bookmarks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/bookmarks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"bookmarks"
							]
						},
						"description": "Get all recipes bookmarked by the current user"
					},
					"response": []
				},
				{
					"name": "Add Recipe to Bookmarks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipeId\": \"{{recipeId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/bookmarks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"bookmarks"
							]
						},
						"description": "Add a recipe to the current user's bookmarks"
					},
					"response": []
				},
				{
					"name": "Remove Recipe from Bookmarks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/bookmarks/{{recipeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"bookmarks",
								"{{recipeId}}"
							]
						},
						"description": "Remove a recipe from the current user's bookmarks"
					},
					"response": []
				},
				{
					"name": "Get User's Reviews",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"reviews"
							]
						},
						"description": "Get all reviews/comments posted by the current user"
					},
					"response": []
				}
			],
			"description": "User profile management endpoints for viewing and updating profiles, and managing favorites, bookmarks, and reviews"
		},
		{
			"name": "Recipes",
			"item": [
				{
					"name": "Get All Recipes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.recipes && jsonData.recipes.length > 0) {",
									"    pm.environment.set(\"recipeId\", jsonData.recipes[0]._id);",
									"    console.log('Set recipeId to: ' + jsonData.recipes[0]._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes"
							]
						},
						"description": "Get all recipes with optional pagination, filtering, and sorting. This request automatically sets the recipeId environment variable for subsequent requests."
					},
					"response": []
				},
				{
					"name": "Get Recipes with Pagination",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recipes?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "Get paginated recipes (12 per page)"
					},
					"response": []
				},
				{
					"name": "Get Filtered Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recipes?keyword=chicken&category=Dinner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes"
							],
							"query": [
								{
									"key": "keyword",
									"value": "chicken"
								},
								{
									"key": "category",
									"value": "Dinner"
								}
							]
						},
						"description": "Get recipes filtered by keyword and category"
					},
					"response": []
				},
				{
					"name": "Get Recipe by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recipes/{{recipeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes",
								"{{recipeId}}"
							]
						},
						"description": "Get a single recipe by its ID"
					},
					"response": []
				},
				{
					"name": "Create Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData._id) {",
									"    pm.environment.set(\"newRecipeId\", jsonData._id);",
									"    console.log('Set newRecipeId to: ' + jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Homemade Pizza\",\n    \"description\": \"A delicious homemade pizza recipe that's easy to make.\",\n    \"ingredients\": [\n        {\n            \"name\": \"all-purpose flour\",\n            \"amount\": \"2\",\n            \"unit\": \"cup\"\n        },\n        {\n            \"name\": \"active dry yeast\",\n            \"amount\": \"1\",\n            \"unit\": \"tsp\"\n        },\n        {\n            \"name\": \"salt\",\n            \"amount\": \"1\",\n            \"unit\": \"tsp\"\n        },\n        {\n            \"name\": \"sugar\",\n            \"amount\": \"1\",\n            \"unit\": \"tsp\"\n        },\n        {\n            \"name\": \"warm water\",\n            \"amount\": \"3/4\",\n            \"unit\": \"cup\"\n        },\n        {\n            \"name\": \"olive oil\",\n            \"amount\": \"2\",\n            \"unit\": \"tbsp\"\n        },\n        {\n            \"name\": \"pizza sauce\",\n            \"amount\": \"1/2\",\n            \"unit\": \"cup\"\n        },\n        {\n            \"name\": \"mozzarella cheese\",\n            \"amount\": \"1\",\n            \"unit\": \"cup\"\n        }\n    ],\n    \"steps\": [\n        {\n            \"description\": \"In a large bowl, combine flour, yeast, salt, and sugar.\",\n            \"image\": \"\"\n        },\n        {\n            \"description\": \"Add warm water and olive oil, mix until a soft dough forms.\",\n            \"image\": \"\"\n        },\n        {\n            \"description\": \"Knead dough on a floured surface until smooth, about 5 minutes.\",\n            \"image\": \"\"\n        },\n        {\n            \"description\": \"Place in a greased bowl, cover, and let rise for 30 minutes.\",\n            \"image\": \"\"\n        },\n        {\n            \"description\": \"Preheat oven to 450°F (230°C).\",\n            \"image\": \"\"\n        },\n        {\n            \"description\": \"Roll out dough on a floured surface, transfer to a pizza pan.\",\n            \"image\": \"\"\n        },\n        {\n            \"description\": \"Spread pizza sauce over dough, sprinkle with cheese and add toppings.\",\n            \"image\": \"\"\n        },\n        {\n            \"description\": \"Bake for 12-15 minutes or until crust is golden and cheese is bubbly.\",\n            \"image\": \"\"\n        }\n    ],\n    \"prepTime\": 20,\n    \"cookTime\": 15,\n    \"servings\": 4,\n    \"difficulty\": \"Medium\",\n    \"cuisine\": \"Italian\",\n    \"category\": \"Dinner\",\n    \"tags\": [\"Italian\", \"Pizza\", \"Dinner\", \"Homemade\"],\n    \"mainImage\": \"https://img-global.cpcdn.com/recipes/5445850674561024/400x400cq70/photo.jpg\",\n    \"nutrition\": {\n        \"calories\": \"320\",\n        \"protein\": \"12g\",\n        \"carbs\": \"42g\",\n        \"fat\": \"10g\",\n        \"sodium\": \"580mg\",\n        \"fiber\": \"2g\"\n    },\n    \"notes\": \"You can customize this pizza with your favorite toppings!\",\n    \"isPublic\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes"
							]
						},
						"description": "Create a new recipe. This request automatically sets the newRecipeId environment variable for subsequent requests."
					},
					"response": []
				},
				{
					"name": "Update Recipe",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Pizza Recipe\",\n    \"prepTime\": 15,\n    \"cookTime\": 12,\n    \"tags\": [\"Italian\", \"Pizza\", \"Dinner\", \"Quick\", \"Easy\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/recipes/{{newRecipeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes",
								"{{newRecipeId}}"
							]
						},
						"description": "Update an existing recipe"
					},
					"response": []
				},
				{
					"name": "Get Related Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recipes/{{recipeId}}/related",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes",
								"{{recipeId}}",
								"related"
							]
						},
						"description": "Get recipes related to a specific recipe"
					},
					"response": []
				},
				{
					"name": "Get Popular Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recipes/popular",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes",
								"popular"
							]
						},
						"description": "Get the most popular recipes based on ratings"
					},
					"response": []
				},
				{
					"name": "Get Recent Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recipes/recent",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes",
								"recent"
							]
						},
						"description": "Get the most recently added recipes"
					},
					"response": []
				},
				{
					"name": "Delete Recipe",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recipes/{{newRecipeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recipes",
								"{{newRecipeId}}"
							]
						},
						"description": "Delete a recipe by its ID"
					},
					"response": []
				}
			],
			"description": "Recipe management endpoints for creating, reading, updating, and deleting recipes, as well as getting related, popular, and recent recipes"
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get Recipe Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.length > 0) {",
									"    pm.environment.set(\"commentId\", jsonData[0]._id);",
									"    console.log('Set commentId to: ' + jsonData[0]._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/comments/recipe/{{recipeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"recipe",
								"{{recipeId}}"
							]
						},
						"description": "Get all comments for a specific recipe. This request automatically sets the commentId environment variable for subsequent requests."
					},
					"response": []
				},
				{
					"name": "Create Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData._id) {",
									"    pm.environment.set(\"newCommentId\", jsonData._id);",
									"    console.log('Set newCommentId to: ' + jsonData._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipeId\": \"{{recipeId}}\",\n    \"content\": \"This recipe is amazing! I made it for dinner last night and everyone loved it. I added some extra cheese and it was perfect.\",\n    \"rating\": 5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments"
							]
						},
						"description": "Add a new comment/review to a recipe. This request automatically sets the newCommentId environment variable for subsequent requests."
					},
					"response": []
				},
				{
					"name": "Update Comment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Updated review: This recipe is incredible! I added some extra herbs and it elevated the flavors even more.\",\n    \"rating\": 5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/comments/{{newCommentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"{{newCommentId}}"
							]
						},
						"description": "Update an existing comment/review"
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/comments/{{newCommentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"{{newCommentId}}"
							]
						},
						"description": "Delete a comment/review"
					},
					"response": []
				}
			],
			"description": "Comment management endpoints for creating, reading, updating, and deleting comments"
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/search?q=chicken",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "chicken"
								}
							]
						},
						"description": "Basic search for recipes"
					},
					"response": []
				},
				{
					"name": "Advanced Search Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/search?q=pasta&withIngredients=garlic,onion&withoutIngredients=mushrooms&category=Dinner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "pasta"
								},
								{
									"key": "withIngredients",
									"value": "garlic,onion"
								},
								{
									"key": "withoutIngredients",
									"value": "mushrooms"
								},
								{
									"key": "category",
									"value": "Dinner"
								}
							]
						},
						"description": "Advanced search for recipes with ingredients filtering"
					},
					"response": []
				},
				{
					"name": "Get Popular Searches",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/search/popular",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"search",
								"popular"
							]
						},
						"description": "Get the most popular search terms"
					},
					"response": []
				}
			],
			"description": "Search endpoints for finding recipes and popular search terms"
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Get All Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.length > 0) {",
									"    pm.environment.set(\"categoryId\", jsonData[0]._id);",
									"    console.log('Set categoryId to: ' + jsonData[0]._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						},
						"description": "Get all recipe categories. This request automatically sets the categoryId environment variable for subsequent requests."
					},
					"response": []
				},
				{
					"name": "Get Category Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories/{{categoryId}}/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories",
								"{{categoryId}}",
								"recipes"
							]
						},
						"description": "Get all recipes in a specific category"
					},
					"response": []
				},
				{
					"name": "Create Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Street Food\",\n    \"description\": \"Delicious recipes inspired by street food from around the world\",\n    \"image\": \"https://img-global.cpcdn.com/recipes/cadc6c8abff9f4d9/400x400cq70/photo.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						},
						"description": "Create a new recipe category"
					},
					"response": []
				}
			],
			"description": "Category management endpoints for getting categories and recipes by category"
		},
		{
			"name": "Upload",
			"item": [
				{
					"name": "Upload Image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "/path/to/your/image.jpg",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"upload"
							]
						},
						"description": "Upload an image file. To test, attach a file from your computer."
					},
					"response": []
				}
			],
			"description": "File upload endpoints for uploading images"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		}
	]
}